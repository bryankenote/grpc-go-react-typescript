/**
 * @fileoverview gRPC-Web generated client stub for helloworld
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.3
// source: src/go-grpc/helloworld.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from "grpc-web";

import * as src_go$grpc_helloworld_pb from "../../src/go-grpc/helloworld_pb";

export class GreeterClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(
    hostname: string,
    credentials?: null | { [index: string]: string },
    options?: null | { [index: string]: any }
  ) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options["format"] = "binary";

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorSayHello = new grpcWeb.MethodDescriptor(
    "/helloworld.Greeter/SayHello",
    grpcWeb.MethodType.UNARY,
    src_go$grpc_helloworld_pb.HelloRequest,
    src_go$grpc_helloworld_pb.HelloReply,
    (request: src_go$grpc_helloworld_pb.HelloRequest) => {
      return request.serializeBinary();
    },
    src_go$grpc_helloworld_pb.HelloReply.deserializeBinary
  );

  sayHello(
    request: src_go$grpc_helloworld_pb.HelloRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<src_go$grpc_helloworld_pb.HelloReply>;

  sayHello(
    request: src_go$grpc_helloworld_pb.HelloRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: src_go$grpc_helloworld_pb.HelloReply
    ) => void
  ): grpcWeb.ClientReadableStream<src_go$grpc_helloworld_pb.HelloReply>;

  sayHello(
    request: src_go$grpc_helloworld_pb.HelloRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: src_go$grpc_helloworld_pb.HelloReply
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/helloworld.Greeter/SayHello",
        request,
        metadata || {},
        this.methodDescriptorSayHello,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/helloworld.Greeter/SayHello",
      request,
      metadata || {},
      this.methodDescriptorSayHello
    );
  }

  methodDescriptorSayHelloAgain = new grpcWeb.MethodDescriptor(
    "/helloworld.Greeter/SayHelloAgain",
    grpcWeb.MethodType.UNARY,
    src_go$grpc_helloworld_pb.HelloRequest,
    src_go$grpc_helloworld_pb.HelloReply,
    (request: src_go$grpc_helloworld_pb.HelloRequest) => {
      return request.serializeBinary();
    },
    src_go$grpc_helloworld_pb.HelloReply.deserializeBinary
  );

  sayHelloAgain(
    request: src_go$grpc_helloworld_pb.HelloRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<src_go$grpc_helloworld_pb.HelloReply>;

  sayHelloAgain(
    request: src_go$grpc_helloworld_pb.HelloRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: src_go$grpc_helloworld_pb.HelloReply
    ) => void
  ): grpcWeb.ClientReadableStream<src_go$grpc_helloworld_pb.HelloReply>;

  sayHelloAgain(
    request: src_go$grpc_helloworld_pb.HelloRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: src_go$grpc_helloworld_pb.HelloReply
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/helloworld.Greeter/SayHelloAgain",
        request,
        metadata || {},
        this.methodDescriptorSayHelloAgain,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/helloworld.Greeter/SayHelloAgain",
      request,
      metadata || {},
      this.methodDescriptorSayHelloAgain
    );
  }
}
